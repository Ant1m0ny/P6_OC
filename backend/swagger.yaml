openapi: 3.0.0
info:
  title: MVG API
  description: API Backend for MVG
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
paths:
  /auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    format: int64
                    example: 1
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1MTg3NDkzOSwiZXhwIjoxNjUxOTYxMzM5fQ.JGN1p8YIfR-M-5eQ-Ypy6Ima5cKA4VbfL2xMr2MgHm4
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error
  /auth/signup:
    post:
      summary: Signup user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /books:
    get:
      summary: Get all books
      tags:
        - Books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '500':
          description: Internal server error
    post:
      summary: Add a new book
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '500':
          description: Internal server error
  /books/bestratings:
    get:
      summary: Get best rated books
      tags:
        - Books
      responses:
        '200':
          description: A list of best rated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '500':
          description: Internal server error
  /books/{id}:
    get:
      summary: Get a book by ID
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
        '500':
          description: Internal server error
    put:
      summary: Update a book by ID
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '500':
          description: Internal server error
    delete:
      summary: Delete a book by ID
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted
        '500':
          description: Internal server error
  /books/{id}/rating:
    patch:
      summary: Rate a book by ID
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
      responses:
        '200':
          description: Book rated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Bad request
        '500':
          description: Internal server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
    Book:
      type: object
      properties:
        id:
          type: string
        image:
          type: string
        title:
          type: string
        author:
          type: string
        year:
          type: number
        genre:
          type: string
        note:
          type: number